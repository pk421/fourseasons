# -*- mode: ruby -*-
# vi: set ft=ruby :

#the thing to remember is that this is running on the host
#computer to tell Vagrant how to make a virtual computer
Vagrant::Config.run do |config|
  config.vm.box = "precise64"
  config.vm.box_url = "http://files.vagrantup.com/precise64.box"

  #fixed IP addresses based on user home directory

  addresses = {
    '/home/devuser1/wellington_prod/MessagingStack' => {
      :ip => '172.16.1.50',
      :netmask => '255.255.255.0',
      :gateway => '172.16.1.1'
      },
    '/home/devuser1/wellington_test/MessagingStack' => {
      :ip => '172.16.1.51',
      :netmask => '255.255.255.0',
      :gateway => '172.16.1.1'
      },
    '/home/devuser1/tho_prod/MessagingStack' => {
      :ip => '172.16.1.52',
      :netmask => '255.255.255.0',
      :gateway => '172.16.1.1'
      },
    '/home/devuser1/tho_test/MessagingStack' => {
      :ip => '172.16.1.53',
      :netmask => '255.255.255.0',
      :gateway => '172.16.1.1'
      },
    '/home/devuser1/excel_prod/MessagingStack' => {
      :ip => '172.16.1.54',
      :netmask => '255.255.255.0',
      :gateway => '172.16.1.1'
      },
    '/home/devuser1/excel_test/MessagingStack' => {
      :ip => '172.16.1.55',
      :netmask => '255.255.255.0',
      :gateway => '172.16.1.1'
      },
    '/home/devuser1/bonds_test/MessagingStack' => {
      :ip => '172.16.1.99',
      :netmask => '255.255.255.0',
      :gateway => '172.16.1.1'
      }
    }

  current_dir = `pwd`.strip

  if addresses.has_key? current_dir then
    address = addresses[current_dir]
    puts "GUI Development"
    install_script = File.read 'standalone_vagrant_prep.sh'
    inline_script = <<-script
    ifconfig eth1 #{address[:ip]} netmask #{address[:netmask]}
    route add default gw #{address[:gateway]}
    #{install_script}
    script
    config.vm.network :bridged
    config.vm.provision :shell, :inline => inline_script
    config.vm.share_folder("working", "/working", ".", :nfs => false)

  elsif `uname`.strip == 'Linux' then
    #non shared folder development settings
    config.vm.provision :shell, :path => "standalone_vagrant_prep.sh"
    #if you want to run more than one vagrant on the same physical machine
    #you will need to edit the IP address below in one of the directories
    #since the "vagrant up" of the second vagrant will fail if it attempts
    #to use the same IP address as the vagrant that is already running
    config.vm.network :hostonly, "192.168.33.11"
    #here is the self share, we'll use this to clone
    config.vm.share_folder("working", "/working", ".", :nfs => false)
    puts "Linux"

  elsif `uname`.strip == 'Darwin' then
    #default shared folder development settings
    config.vm.provision :shell, :path => "vagrant_prep.sh"
    config.vm.network :hostonly, "172.16.1.17"
    config.vm.share_folder("working", "/working", ".", :nfs => true)
    puts "Darwin"
  end

  config.vm.customize ["modifyvm", :id, "--memory", "8192"]
  config.vm.customize ["modifyvm", :id, "--cpus", "4"]

end
